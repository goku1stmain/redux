{"ast":null,"code":"// going to represent user reducer or user slice\nimport { createSlice } from \"@reduxjs/toolkit\"; // createSlice is going to create reducers in very easy way\n// now creating new user reducer\n\nexport const userSlice = createSlice({\n  // contains all the information about the reducers, what action it should take place\n  name: \"user\",\n  // name of the reducer is what you pass inside name variable\n  initialState: {\n    value: {\n      name: \"sdsd\",\n      age: 0,\n      email: \"dsdls@gmail.com\"\n    }\n  },\n  // your initial value\n  reducers: {\n    // passing different functions to change the value\n    login: (state, action) => {\n      state.value = action.payload;\n    } // each functions takes in two values they are your state and action to be performed\n\n  }\n});\nexport default userSlice.reducer;","map":{"version":3,"sources":["/Users/gokuljs/Documents/redux-tes/redux-test/src/features/user.js"],"names":["createSlice","userSlice","name","initialState","value","age","email","reducers","login","state","action","payload","reducer"],"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,kBAA5B,C,CACA;AAEA;;AACA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;AACnC;AACAE,EAAAA,IAAI,EAAE,MAF6B;AAErB;AACdC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAEF,MAAAA,IAAI,EAAE,MAAR;AAAgBG,MAAAA,GAAG,EAAE,CAArB;AAAwBC,MAAAA,KAAK,EAAE;AAA/B;AAAT,GAHqB;AAG0C;AAC7EC,EAAAA,QAAQ,EAAE;AACR;AACAC,IAAAA,KAAK,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxBD,MAAAA,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACC,OAArB;AACD,KAJO,CAIL;;AAJK;AAJyB,CAAD,CAA7B;AAYP,eAAeV,SAAS,CAACW,OAAzB","sourcesContent":["// going to represent user reducer or user slice\nimport { createSlice } from \"@reduxjs/toolkit\";\n// createSlice is going to create reducers in very easy way\n\n// now creating new user reducer\nexport const userSlice = createSlice({\n  // contains all the information about the reducers, what action it should take place\n  name: \"user\", // name of the reducer is what you pass inside name variable\n  initialState: { value: { name: \"sdsd\", age: 0, email: \"dsdls@gmail.com\" } }, // your initial value\n  reducers: {\n    // passing different functions to change the value\n    login: (state, action) => {\n      state.value = action.payload;\n    }, // each functions takes in two values they are your state and action to be performed\n  },\n});\n\nexport default userSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}