{"ast":null,"code":"var _jsxFileName = \"/Users/gokuljs/Documents/redux-tes/redux-test/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\"; // creating a store using configure store\n\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { Provider } from \"react-redux\";\nimport useReducer from \"./features/user\";\nimport themeReducer from \"./features/theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = configureStore({\n  // we pass reducer inside the configure store\n  reducer: {\n    user: useReducer,\n    theme: themeReducer\n  } // it is a function which takes in value about current states\n  //takes in three main things previous value,action,and return new value of the state\n\n});\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 3\n}, this)); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/gokuljs/Documents/redux-tes/redux-test/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","configureStore","Provider","useReducer","themeReducer","store","reducer","user","theme","root","createRoot","document","getElementById","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B,C,CACA;;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;;AACA,MAAMC,KAAK,GAAGJ,cAAc,CAAC;AAC3B;AACAK,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEJ,UADC;AAEPK,IAAAA,KAAK,EAAEJ;AAFA,GAFkB,CAKxB;AACH;;AAN2B,CAAD,CAA5B;AAQA,MAAMK,IAAI,GAAGX,QAAQ,CAACY,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb;AACAH,IAAI,CAACI,MAAL,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAER,KAAjB;AAAA,2BAEE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,E,CASA;AACA;AACA;;AACAL,eAAe","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n// creating a store using configure store\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { Provider } from \"react-redux\";\nimport useReducer from \"./features/user\";\nimport themeReducer from \"./features/theme\";\nconst store = configureStore({\n  // we pass reducer inside the configure store\n  reducer: {\n    user: useReducer,\n    theme: themeReducer,\n  }, // it is a function which takes in value about current states\n  //takes in three main things previous value,action,and return new value of the state\n});\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* provider is making sure that all components should get access to the store  */}\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}